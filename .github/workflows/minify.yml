name: Minify and Deploy
run-name: Minify JS/CSS/HTML and deploy to gh-pages

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  checkout-minify-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install minification and inlining tools
        run: |
          npm install -g terser csso-cli html-minifier inline-source-cli
      
      - name: Inject Supabase credentials from secrets
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "üîç Checking if secrets are available..."
          if [ -z "$SUPABASE_URL" ]; then
            echo "‚ùå SUPABASE_URL is empty or not set!"
          else
            echo "‚úÖ SUPABASE_URL is set (length: ${#SUPABASE_URL})"
          fi
          if [ -z "$SUPABASE_ANON_KEY" ]; then
            echo "‚ùå SUPABASE_ANON_KEY is empty or not set!"
          else
            echo "‚úÖ SUPABASE_ANON_KEY is set (length: ${#SUPABASE_ANON_KEY})"
          fi
          
          echo "üîÑ Injecting credentials..."
          sed -i "s|'__SUPABASE_URL__'|'$SUPABASE_URL'|g" qlash.js
          sed -i "s|'__SUPABASE_ANON_KEY__'|'$SUPABASE_ANON_KEY'|g" qlash.js
          
          echo "‚úÖ Credentials injected. Verifying..."
          if grep -q "SUPABASE_URL = 'https://" qlash.js; then
            echo "‚úÖ URL injection successful"
          else
            echo "‚ö†Ô∏è URL injection may have failed"
            grep "SUPABASE_URL" qlash.js | head -1
          fi
          if grep -q "SUPABASE_ANON_KEY = 'eyJ" qlash.js; then
            echo "‚úÖ Key injection successful"
          else
            echo "‚ö†Ô∏è Key injection may have failed"
            grep "SUPABASE_ANON_KEY" qlash.js | head -1
          fi
      
      - name: Minify JavaScript files
        run: |
          terser index.js --compress --mangle -o index.js
          terser cards.js --compress --mangle -o cards.js
          terser qlash.js --compress --mangle -o qlash.js
          terser sanitize.js --compress --mangle -o sanitize.js
      
      - name: Minify CSS files
        run: |
          csso cards.css -o cards.css
          csso qlash.css -o qlash.css

      - name: Add inline attributes to HTML files for inlining
        run: |
          # index.html
          sed -i 's|<script src="index\.js"></script>|<script inline src="index.js"></script>|g' index.html
          
          # cards.html
          sed -i 's|<link rel="stylesheet" href="cards\.css">|<link inline rel="stylesheet" href="cards.css">|g' cards.html
          sed -i 's|<script src="sanitize\.js"></script>|<script inline src="sanitize.js"></script>|g' cards.html
          sed -i 's|<script src="cards\.js"></script>|<script inline src="cards.js"></script>|g' cards.html
          
          # qlash.html - need to handle external CDN scripts differently
          sed -i 's|<link rel="stylesheet" href="qlash\.css">|<link inline rel="stylesheet" href="qlash.css">|g' qlash.html
          sed -i 's|<script src="sanitize\.js"></script>|<script inline src="sanitize.js"></script>|g' qlash.html
          sed -i 's|<script src="qlash\.js"></script>|<script inline src="qlash.js"></script>|g' qlash.html

      - name: Inline CSS and JS into HTML files
        run: |
          # Inline index.html
          inline-source index.html --compress false --root ./ > index.inline.html
          mv index.inline.html index.html
          
          # Inline cards.html
          inline-source cards.html --compress false --root ./ > cards.inline.html
          mv cards.inline.html cards.html
          
          # Inline qlash.html
          inline-source qlash.html --compress false --root ./ > qlash.inline.html
          mv qlash.inline.html qlash.html

      - name: Minify inlined HTML files
        run: |
          html-minifier \
            --collapse-boolean-attributes \
            --collapse-whitespace \
            --minify-css true \
            --minify-js true \
            --remove-comments \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-style-link-type-attributes \
            --use-short-doctype \
            index.html -o index.html
          
          html-minifier \
            --collapse-boolean-attributes \
            --collapse-whitespace \
            --minify-css true \
            --minify-js true \
            --remove-comments \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-style-link-type-attributes \
            --use-short-doctype \
            cards.html -o cards.html
          
          html-minifier \
            --collapse-boolean-attributes \
            --collapse-whitespace \
            --minify-css true \
            --minify-js true \
            --remove-comments \
            --remove-redundant-attributes \
            --remove-script-type-attributes \
            --remove-style-link-type-attributes \
            --use-short-doctype \
            qlash.html -o qlash.html
          
          html-minifier \
            --collapse-boolean-attributes \
            --collapse-whitespace \
            --minify-css true \
            --remove-comments \
            --remove-redundant-attributes \
            --use-short-doctype \
            datenschutz.html -o datenschutz.html

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit minified and inlined files
        run: |
          git add *.html qlash/
          git diff --quiet && git diff --staged --quiet || git commit -m "Minify and inline for deployment (SHA: ${{ github.sha }})"

      - name: Deploy to gh-pages
        run: |
          git push --force origin HEAD:gh-pages || echo "No changes to push"
          echo "üöÄ Successfully deployed to gh-pages branch"
